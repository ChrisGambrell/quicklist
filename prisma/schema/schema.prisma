datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

enum ListingStatus {
  draft
  published
}

model Listing {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  title String?
  desc  String?
  price Float?

  images      ListingImage[]
  generations Generation[]
}

model ListingImage {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  listingId String
  listing   Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)

  imagePath String
  isPrimary Boolean @default(false)
}

model Rule {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  rule String?
}

model Generation {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  listingId String
  listing   Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  credits Int
  data    Json
}

model ProductAmount {
  productId String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  credits       Int @default(0)
  listingAmount Int @default(0)
  ruleAmount    Int @default(0)
}
