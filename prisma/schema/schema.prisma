generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Generation {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  listingId String
  userId    String
  credits   Int
  data      Json

  listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum ListingStatus {
  draft
  published
}

model Listing {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId   String
  filePath String?
  title    String?
  desc     String?
  price    Float?
  status   ListingStatus @default(draft)

  user        User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  generations Generation[]
  images      ListingImage[]
}

model ListingImage {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  listingId String
  imagePath String
  isPrimary Boolean @default(false)

  listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
}

model Rule {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  rule   String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
