model Customer {
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    stripeCustomerId String?

    user User @relation(fields: [id], references: [id], onDelete: Cascade)
}

enum PricingType {
    one_time
    recurring
}

enum PricingPlanInterval {
    day
    week
    month
    year
}

model Price {
    id        String   @id
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    productId       String
    active          Boolean?
    unitAmount      BigInt?
    currency        String?
    type            PricingType?
    interval        PricingPlanInterval?
    intervalCount   Int?
    trialPeriodDays Int?

    product       Product        @relation(fields: [productId], references: [id], onDelete: Cascade)
    purchases     Purchase[]
    subscriptions Subscription[]
}

model Product {
    id        String   @id
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    active   Boolean?
    name     String?
    desc     String?
    image    String?
    metadata Json?

    prices Price[]
}

model Purchase {
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    priceId String
    userId  String

    price Price @relation(fields: [priceId], references: [id], onDelete: Cascade)
    user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum SubscriptionStatus {
    trialing
    active
    canceled
    incomplete
    incomplete_expired
    past_due
    unpaid
    paused
}

model Subscription {
    id        String   @id
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    priceId            String
    userId             String
    quantity           Int?
    cancelAtPeriodEnd  Boolean?
    currentPeriodStart DateTime @default(now())
    currentPeriodEnd   DateTime @default(now())
    endedAt            DateTime @default(now())
    cancelAt           DateTime @default(now())
    canceledAt         DateTime @default(now())
    trialStart         DateTime @default(now())
    trialEnd           DateTime @default(now())

    price Price @relation(fields: [priceId], references: [id], onDelete: Cascade)
    user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
}
